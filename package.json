{
  "name": "codora",
  "displayName": "Codora",
  "description": "üó∫Ô∏è Code Explorer - Interactive guide for understanding complex codebases like Dora explores new territories",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.76.0"
  },
  "categories": [
    "Other",
    "Education"
  ],
  "keywords": [
    "code explorer",
    "code guide",
    "dora",
    "tutorial",
    "learning",
    "code understanding",
    "interactive",
    "ai"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "codora.startExploration",
        "title": "üó∫Ô∏è Start Code Exploration",
        "category": "Codora"
      },
      {
        "command": "codora.startExplorationFromHover",
        "title": "üöÄ Start Exploration from Hover",
        "category": "Codora"
      },
      {
        "command": "codora.showQuickInfo",
        "title": "üîç Show Quick Info",
        "category": "Codora"
      },
      {
        "command": "codora.openConfiguration",
        "title": "üîß Open Configuration",
        "category": "Codora"
      },
      {
        "command": "codora.testWebview",
        "title": "üß™ Test Webview Panel",
        "category": "Codora"
      },
      {
        "command": "codora.showUsageStats",
        "title": "üìä Show Usage Statistics",
        "category": "Codora"
      },
      {
        "command": "codora.clearCache",
        "title": "üóëÔ∏è Clear Cache",
        "category": "Codora"
      },
      {
        "command": "codora.refreshConfig",
        "title": "üîÑ Refresh Configuration",
        "category": "Codora"
      },
      {
        "command": "codora.toggleInteractiveSelection",
        "title": "üéØ Toggle Interactive Selection Mode",
        "category": "Codora"
      },
      {
        "command": "codora.exploreSemanticBlock",
        "title": "üîç Explore Semantic Block",
        "category": "Codora"
      },
      {
        "command": "codora.showMemoryStats",
        "title": "üß† Show Memory Statistics",
        "category": "Codora"
      },
      {
        "command": "codora.cleanupMemory",
        "title": "üóëÔ∏è Cleanup Memory Cache",
        "category": "Codora"
      },
      {
        "command": "codora.showExplorationHistory",
        "title": "üìö Show Exploration History",
        "category": "Codora"
      },
      {
        "command": "codora.showRelatedFiles",
        "title": "üåê Show Related Files",
        "category": "Codora"
      },
      {
        "command": "codora.showNavigationHistory",
        "title": "üß≠ Show Navigation History",
        "category": "Codora"
      },
      {
        "command": "codora.getNavigationSuggestions",
        "title": "üîç Get Navigation Suggestions",
        "category": "Codora"
      },
      {
        "command": "codora.showCrossFileStats",
        "title": "üìä Show Cross-File Statistics",
        "category": "Codora"
      },
      {
        "command": "codora.startContextSession",
        "title": "üß† Start Context Session",
        "category": "Codora"
      },
      {
        "command": "codora.showContextSummary",
        "title": "üìã Show Context Summary",
        "category": "Codora"
      },
      {
        "command": "codora.addContextBookmark",
        "title": "üîñ Add Context Bookmark",
        "category": "Codora"
      },
      {
        "command": "codora.addContextAnnotation",
        "title": "üìù Add Context Annotation",
        "category": "Codora"
      },
      {
        "command": "codora.getContextSuggestions",
        "title": "üí° Get Context Suggestions",
        "category": "Codora"
      }
    ],
    "configuration": {
      "title": "Codora",
      "properties": {
        "codora.aiService.provider": {
          "type": "string",
          "enum": [
            "openai",
            "anthropic",
            "local",
            "dual"
          ],
          "default": "dual",
          "description": "AI service provider for code explanations"
        },
        "codora.aiService.model": {
          "type": "string",
          "description": "Specific model to use (e.g., gpt-4, claude-3-sonnet-20240229, llama2)"
        },
        "codora.aiService.apiKey": {
          "type": "string",
          "description": "API key for OpenAI or other providers"
        },
        "codora.aiService.anthropicKey": {
          "type": "string",
          "description": "API key for Anthropic Claude"
        },
        "codora.aiService.efficiencyApiKey": {
          "type": "string",
          "description": "API key for efficiency-focused model (for simple code analysis)"
        },
        "codora.aiService.performanceApiKey": {
          "type": "string",
          "description": "API key for performance-focused model (for complex code analysis)"
        },
        "codora.aiService.efficiencyModel": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "Model for simple/routine code analysis (cost-efficient)"
        },
        "codora.aiService.performanceModel": {
          "type": "string",
          "default": "gpt-4",
          "description": "Model for complex code analysis (high-performance)"
        },
        "codora.aiService.complexityThreshold": {
          "type": "number",
          "default": 0.6,
          "minimum": 0,
          "maximum": 1,
          "description": "Complexity threshold to switch from efficiency to performance model (0.0-1.0)"
        },
        "codora.aiService.baseUrl": {
          "type": "string",
          "description": "Base URL for local models or custom endpoints"
        },
        "codora.aiService.maxTokens": {
          "type": "number",
          "default": 1000,
          "minimum": 100,
          "maximum": 4000,
          "description": "Maximum tokens for AI responses"
        },
        "codora.aiService.temperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 2,
          "description": "Temperature for AI responses (0.0-2.0)"
        },
        "codora.aiService.budgetLimit": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 1000,
          "description": "Monthly budget limit in USD"
        },
        "codora.aiService.preferCheaperModels": {
          "type": "boolean",
          "default": true,
          "description": "Prefer cheaper models when possible to reduce costs"
        },
        "codora.aiService.enableBatching": {
          "type": "boolean",
          "default": false,
          "description": "Enable request batching for cost optimization"
        },
        "codora.aiService.budgetResetType": {
          "type": "string",
          "enum": [
            "clear",
            "archive"
          ],
          "default": "archive",
          "description": "How to handle old usage data when resetting budget"
        },
        "codora.features.autoExplain": {
          "type": "boolean",
          "default": true,
          "description": "Automatically provide explanations when hovering over code"
        },
        "codora.features.contextAware": {
          "type": "boolean",
          "default": true,
          "description": "Use surrounding code context for better explanations"
        },
        "codora.features.cacheExplanations": {
          "type": "boolean",
          "default": false,
          "description": "Cache explanations locally to reduce API calls"
        },
        "codora.features.showHoverButtons": {
          "type": "boolean",
          "default": true,
          "description": "Show exploration buttons when hovering over code symbols"
        }
      }
    },
    "keybindings": [
      {
        "command": "codora.toggleInteractiveSelection",
        "key": "cmd+shift+e",
        "mac": "cmd+shift+e",
        "win": "ctrl+shift+e",
        "linux": "ctrl+shift+e",
        "when": "editorTextFocus"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "codora.startExploration",
          "when": "editorTextFocus",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.9.5"
  }
}